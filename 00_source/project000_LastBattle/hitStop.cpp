//============================================================
//
//	ヒットストップ処理 [hitStop.cpp]
//	Author：藤田勇一
//
//============================================================
//************************************************************
//	インクルードファイル
//************************************************************
#include "hitStop.h"

//************************************************************
//	親クラス [CHitStop] のメンバ関数
//************************************************************
//============================================================
//	コンストラクタ
//============================================================
CHitStop::CHitStop() : m_bStop(false)
{

}

//============================================================
//	デストラクタ
//============================================================
CHitStop::~CHitStop()
{

}

//============================================================
//	初期化処理
//============================================================
HRESULT CHitStop::Init(void)
{
	// メンバ変数を初期化
	m_bStop = false;	// 停止状況

	// 成功を返す
	return S_OK;
}

//============================================================
//	終了処理
//============================================================
void CHitStop::Uninit(void)
{

}

//============================================================
//	更新処理
//============================================================
void CHitStop::Update(void)
{

}

//============================================================
//	描画処理
//============================================================
void CHitStop::Draw(void)
{

}

//============================================================
//	生成処理
//============================================================
CHitStop *CHitStop::Create(void)
{
	// ヒットストップの生成
	CHitStop *pHitStop = new CHitStop;
	if (pHitStop == nullptr)
	{ // 生成に失敗した場合

		return nullptr;
	}
	else
	{ // 生成に成功した場合

		// ヒットストップの初期化
		if (FAILED(pHitStop->Init()))
		{ // 初期化に失敗した場合

			// ヒットストップの破棄
			SAFE_DELETE(pHitStop);
			return nullptr;
		}

		// 確保したアドレスを返す
		return pHitStop;
	}
}

//============================================================
//	破棄処理
//============================================================
void CHitStop::Release(CHitStop *&prHitStop)
{
	// ヒットストップの終了
	assert(prHitStop != nullptr);
	prHitStop->Uninit();

	// メモリ開放
	SAFE_DELETE(prHitStop);
}
